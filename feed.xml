<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://richiebthomas.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://richiebthomas.github.io/blog/" rel="alternate" type="text/html" /><updated>2025-08-15T15:40:12+05:30</updated><id>https://richiebthomas.github.io/blog/feed.xml</id><title type="html">Richie’s Blog</title><subtitle>Richie Thomas&apos;s blog</subtitle><author><name>Richie Thomas</name></author><entry><title type="html">Running MongoDB and Mongo Express on Docker</title><link href="https://richiebthomas.github.io/blog/Docker-Basics-15-08-2025" rel="alternate" type="text/html" title="Running MongoDB and Mongo Express on Docker" /><published>2025-08-15T00:00:00+05:30</published><updated>2025-08-15T00:00:00+05:30</updated><id>https://richiebthomas.github.io/blog/Docker-Basics-15-08-2025</id><content type="html" xml:base="https://richiebthomas.github.io/blog/Docker-Basics-15-08-2025"><![CDATA[<p>When I’m learning Docker, one of the best starter projects is to run a database and a web UI together. In this tutorial, I’ll set up <strong>MongoDB</strong> and <strong>Mongo Express</strong> so I can manage my database right from my browser.<!--more--><br />
But here’s the twist: I’ll also walk through a <em>very common mistake</em> — naming mismatches — that prevents Mongo Express from connecting, and how to fix it for good.</p>

<hr />

<h2 id="why-mongodb--mongo-express">Why MongoDB + Mongo Express?</h2>
<p>MongoDB is a popular NoSQL database.<br />
Mongo Express is a lightweight web-based admin panel for MongoDB, making it easy to:</p>
<ul>
  <li>Browse collections</li>
  <li>Add, update, and delete documents</li>
  <li>Run queries without a CLI</li>
</ul>

<p>Running them together in Docker is a perfect way to understand container networking.</p>

<hr />

<h2 id="the-goal">The Goal</h2>
<p>I want to:</p>
<ol>
  <li>Run MongoDB with authentication.</li>
  <li>Run Mongo Express and connect it to MongoDB.</li>
  <li>Access Mongo Express in the browser.</li>
  <li>Avoid (and fix) the common <em>container name mismatch</em> error.</li>
</ol>

<hr />

<h2 id="step-1--create-a-docker-network">Step 1 — Create a Docker Network</h2>
<p>Containers on the same network can talk to each other using container names as hostnames.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker network create mongo-network
</code></pre></div></div>

<hr />

<h2 id="step-2--the-wrong-mongodb-setup-the-mistake-i-made-first">Step 2 — The <strong>Wrong</strong> MongoDB Setup (The Mistake I Made First)</h2>

<p>When I first ran MongoDB, I used:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-d</span> <span class="nt">-p</span> 27017:27017 <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">MONGO_INITDB_ROOT_USERNAME</span><span class="o">=</span>admin <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">MONGO_INITDB_ROOT_PASSWORD</span><span class="o">=</span>password <span class="se">\</span>
  <span class="nt">--name</span> mongodb <span class="se">\</span>
  <span class="nt">--net</span> mongo-network <span class="se">\</span>
  mongo
</code></pre></div></div>

<p>Looks fine, right?
But then I ran Mongo Express like this:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-d</span> <span class="nt">-p</span> 8081:8081 <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">ME_CONFIG_MONGODB_ADMINUSERNAME</span><span class="o">=</span>admin <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">ME_CONFIG_MONGODB_ADMINPASSWORD</span><span class="o">=</span>password <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">ME_CONFIG_MONGODB_SERVER</span><span class="o">=</span>mongo <span class="se">\</span>
  <span class="nt">--name</span> mongo-express <span class="se">\</span>
  <span class="nt">--net</span> mongo-network <span class="se">\</span>
  mongo-express
</code></pre></div></div>

<p>Mongo Express tries to connect to <code class="language-plaintext highlighter-rouge">mongo:27017</code> — but my database container is named <code class="language-plaintext highlighter-rouge">mongodb</code>, so Docker DNS couldn’t resolve it.</p>

<hr />

<h2 id="step-3--the-error-i-saw">Step 3 — The Error I Saw</h2>

<p>The Mongo Express logs showed:
<img src="https://raw.githubusercontent.com/richiebthomas/blog/refs/heads/main/assets/images/Docker-Basics-15-08-2025/Screenshot%202025-08-15%20151626.png" alt="Mongo Express Error Screenshot" title="Mongo Express Connection Error" />
<em>The Mongo Express container logs after attempting to connect to a wrong container</em></p>

<p>In plain English:</p>

<blockquote>
  <p>“I can’t find any container called <code class="language-plaintext highlighter-rouge">mongo</code> on this network.”</p>
</blockquote>

<hr />

<h2 id="step-4--the-fix-match-the-names">Step 4 — The Fix: Match the Names</h2>

<p>I had two choices:</p>

<ul>
  <li>Change <code class="language-plaintext highlighter-rouge">ME_CONFIG_MONGODB_SERVER</code> to <code class="language-plaintext highlighter-rouge">mongodb</code></li>
  <li>Or rename the database container to <code class="language-plaintext highlighter-rouge">mongo</code></li>
</ul>

<p>I chose the second option because <code class="language-plaintext highlighter-rouge">mongo</code> is shorter and cleaner.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker <span class="nb">rm</span> <span class="nt">-f</span> mongodb

docker run <span class="nt">-d</span> <span class="nt">-p</span> 27017:27017 <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">MONGO_INITDB_ROOT_USERNAME</span><span class="o">=</span>admin <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">MONGO_INITDB_ROOT_PASSWORD</span><span class="o">=</span>password <span class="se">\</span>
  <span class="nt">--name</span> mongo <span class="se">\</span>
  <span class="nt">--net</span> mongo-network <span class="se">\</span>
  mongo
</code></pre></div></div>

<p>Now <code class="language-plaintext highlighter-rouge">--name mongo</code> matches what Mongo Express is expecting.</p>

<hr />

<h2 id="step-5--run-mongo-express-corrected">Step 5 — Run Mongo Express (Corrected)</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker <span class="nb">rm</span> <span class="nt">-f</span> mongo-express

docker run <span class="nt">-d</span> <span class="nt">-p</span> 8081:8081 <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">ME_CONFIG_MONGODB_ADMINUSERNAME</span><span class="o">=</span>admin <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">ME_CONFIG_MONGODB_ADMINPASSWORD</span><span class="o">=</span>password <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">ME_CONFIG_MONGODB_SERVER</span><span class="o">=</span>mongo <span class="se">\</span>
  <span class="nt">--name</span> mongo-express <span class="se">\</span>
  <span class="nt">--net</span> mongo-network <span class="se">\</span>
  mongo-express
</code></pre></div></div>

<hr />

<h2 id="step-6--test-it">Step 6 — Test It</h2>

<ul>
  <li>Visit: <a href="http://localhost:8081">http://localhost:8081</a></li>
  <li>
    <p>Log in with:</p>

    <ul>
      <li>Username: <code class="language-plaintext highlighter-rouge">admin</code></li>
      <li>Password: <code class="language-plaintext highlighter-rouge">pass</code> (default, change it later)</li>
    </ul>
  </li>
</ul>

<p>I should now see the Mongo Express UI without any connection errors.</p>

<hr />

<h2 id="lessons-learned">Lessons Learned</h2>

<ul>
  <li><strong>Docker DNS uses container names</strong> on a user-defined network.</li>
  <li>Always make sure <code class="language-plaintext highlighter-rouge">ME_CONFIG_MONGODB_SERVER</code> matches the database container name exactly.</li>
  <li>Use <code class="language-plaintext highlighter-rouge">docker logs &lt;container&gt;</code> as my first troubleshooting tool.</li>
  <li>If something’s misconfigured, <code class="language-plaintext highlighter-rouge">docker rm -f</code> and re-run with the correct settings — it’s faster than debugging broken containers.</li>
</ul>

<hr />

<h2 id="final-one-liners">Final One-Liners</h2>

<p>Here’s the working setup in two commands:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-d</span> <span class="nt">-p</span> 27017:27017 <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">MONGO_INITDB_ROOT_USERNAME</span><span class="o">=</span>admin <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">MONGO_INITDB_ROOT_PASSWORD</span><span class="o">=</span>password <span class="se">\</span>
  <span class="nt">--name</span> mongo <span class="se">\</span>
  <span class="nt">--net</span> mongo-network <span class="se">\</span>
  mongo
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-d</span> <span class="nt">-p</span> 8081:8081 <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">ME_CONFIG_MONGODB_ADMINUSERNAME</span><span class="o">=</span>admin <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">ME_CONFIG_MONGODB_ADMINPASSWORD</span><span class="o">=</span>password <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">ME_CONFIG_MONGODB_SERVER</span><span class="o">=</span>mongo <span class="se">\</span>
  <span class="nt">--name</span> mongo-express <span class="se">\</span>
  <span class="nt">--net</span> mongo-network <span class="se">\</span>
  mongo-express
</code></pre></div></div>

<hr />

<p><img src="https://raw.githubusercontent.com/richiebthomas/blog/refs/heads/main/assets/images/Docker-Basics-15-08-2025/Screenshot%202025-08-15%20150510.png" alt="Mongo Express Dashboard" title="Mongo Express Dashboard" />
<em>The Mongo Express dashboard after a successful connection</em></p>

<p>```</p>]]></content><author><name>Richie Thomas</name></author><category term="Docker," /><category term="MongoDB," /><category term="MongoExpress," /><category term="Troubleshooting" /><summary type="html"><![CDATA[When I’m learning Docker, one of the best starter projects is to run a database and a web UI together. In this tutorial, I’ll set up MongoDB and Mongo Express so I can manage my database right from my browser.]]></summary></entry></feed>